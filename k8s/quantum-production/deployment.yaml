apiVersion: apps/v1
kind: Deployment
metadata:
  name: quantum-autonomous-sdlc
  namespace: quantum-autonomous-sdlc
  labels:
    app: quantum-autonomous-sdlc
    version: "6.0"
    component: quantum-engine
    tier: application
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: quantum-autonomous-sdlc
      component: quantum-engine
  template:
    metadata:
      labels:
        app: quantum-autonomous-sdlc
        component: quantum-engine
        version: "6.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8001"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      serviceAccountName: quantum-autonomous-sdlc
      containers:
      - name: quantum-engine
        image: terragon/observer-coordinator-insights:quantum-v6.0
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        - name: metrics
          containerPort: 8001
          protocol: TCP
        - name: intelligence
          containerPort: 8002
          protocol: TCP
        env:
        # Quantum Configuration
        - name: QUANTUM_DEPTH
          value: "3"
        - name: NEUROMORPHIC_LAYERS
          value: "2"
        - name: RESERVOIR_SIZE
          value: "100"
        - name: QUANTUM_NOISE_LEVEL
          value: "0.01"
        - name: SPECTRAL_RADIUS
          value: "0.95"
        - name: LEAK_RATE
          value: "0.1"
        
        # Intelligence Configuration
        - name: INTELLIGENCE_ENABLED
          value: "true"
        - name: LEARNING_RATE
          value: "0.05"
        - name: EXPLORATION_RATE
          value: "0.2"
        - name: CONFIDENCE_THRESHOLD
          value: "0.8"
        - name: MEMORY_LIMIT
          value: "10000"
        
        # Distributed Computing
        - name: DISTRIBUTED_COMPUTING
          value: "true"
        - name: AUTO_SCALING
          value: "true"
        - name: MIN_NODES
          value: "1"
        - name: MAX_NODES
          value: "16"
        - name: SCALE_THRESHOLD
          value: "0.8"
        
        # Security Configuration
        - name: QUANTUM_SECURITY
          value: "true"
        - name: ENCRYPTION_ENABLED
          value: "true"
        - name: QKD_ENABLED
          value: "true"
        - name: SECURE_MODE
          value: "true"
        
        # Performance Configuration
        - name: PARALLEL_PROCESSING
          value: "true"
        - name: CACHE_ENABLED
          value: "true"
        - name: CACHE_TTL
          value: "3600"
        - name: MAX_WORKERS
          value: "16"
        
        # Database Configuration
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: quantum-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: quantum-secrets
              key: redis-url
        
        # Monitoring
        - name: MONITORING_ENABLED
          value: "true"
        - name: METRICS_PORT
          value: "8001"
        - name: HEALTH_CHECK_INTERVAL
          value: "30"
        
        # Kubernetes specific
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        
        volumeMounts:
        - name: quantum-data
          mountPath: /app/data
        - name: quantum-logs
          mountPath: /app/logs
        - name: quantum-cache
          mountPath: /app/cache
        - name: quantum-models
          mountPath: /app/models
        - name: quantum-config
          mountPath: /app/config
          readOnly: true
        
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        startupProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 12
        
      - name: quantum-sidecar
        image: terragon/quantum-sidecar:v1.0
        imagePullPolicy: Always
        ports:
        - name: sidecar
          containerPort: 9000
        env:
        - name: PRIMARY_SERVICE
          value: "quantum-autonomous-sdlc"
        - name: MONITORING_MODE
          value: "quantum"
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
        volumeMounts:
        - name: quantum-logs
          mountPath: /app/logs
          readOnly: true
      
      volumes:
      - name: quantum-data
        persistentVolumeClaim:
          claimName: quantum-data-pvc
      - name: quantum-logs
        persistentVolumeClaim:
          claimName: quantum-logs-pvc
      - name: quantum-cache
        emptyDir:
          sizeLimit: 5Gi
      - name: quantum-models
        persistentVolumeClaim:
          claimName: quantum-models-pvc
      - name: quantum-config
        configMap:
          name: quantum-config
      
      nodeSelector:
        quantum-ready: "true"
        kubernetes.io/arch: amd64
      
      tolerations:
      - key: quantum-workload
        operator: Equal
        value: "true"
        effect: NoSchedule
      
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - quantum-autonomous-sdlc
              topologyKey: kubernetes.io/hostname
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: node-type
                operator: In
                values:
                - compute-optimized
      
      terminationGracePeriodSeconds: 120
      
      initContainers:
      - name: quantum-init
        image: terragon/quantum-init:v1.0
        command: ["/bin/sh"]
        args:
        - -c
        - |
          echo "ðŸŒŒ Initializing Quantum Systems..."
          mkdir -p /app/data /app/logs /app/cache /app/models
          chown -R 1000:1000 /app/data /app/logs /app/cache /app/models
          echo "âœ… Quantum Systems Ready"
        volumeMounts:
        - name: quantum-data
          mountPath: /app/data
        - name: quantum-logs
          mountPath: /app/logs
        - name: quantum-models
          mountPath: /app/models