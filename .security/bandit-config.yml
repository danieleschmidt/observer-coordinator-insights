# Bandit Security Scanning Configuration
# Advanced security analysis for Python code

# Test selection and exclusion
tests:
  # Enable all security tests by default
  include:
    - B101  # assert_used
    - B102  # exec_used  
    - B103  # set_bad_file_permissions
    - B104  # hardcoded_bind_all_interfaces
    - B105  # hardcoded_password_string
    - B106  # hardcoded_password_funcarg
    - B107  # hardcoded_password_default
    - B108  # hardcoded_tmp_directory
    - B110  # try_except_pass
    - B112  # try_except_continue
    - B201  # flask_debug_true
    - B301  # pickle
    - B302  # marshal
    - B303  # md5
    - B304  # des
    - B305  # cipher
    - B306  # mktemp_q
    - B307  # eval
    - B308  # mark_safe
    - B309  # httpsconnection
    - B310  # urllib_urlopen
    - B311  # random
    - B312  # telnetlib
    - B313  # xml_bad_cElementTree
    - B314  # xml_bad_ElementTree
    - B315  # xml_bad_expatreader
    - B316  # xml_bad_expatbuilder
    - B317  # xml_bad_sax
    - B318  # xml_bad_minidom
    - B319  # xml_bad_pulldom
    - B320  # xml_bad_xmlparser
    - B321  # ftplib
    - B322  # input  
    - B323  # unverified_context
    - B324  # hashlib_new_insecure_functions
    - B325  # tempnam
    - B401  # import_telnetlib
    - B402  # import_ftplib
    - B403  # import_pickle
    - B404  # import_subprocess
    - B405  # import_xml_etree
    - B406  # import_xml_sax
    - B407  # import_xml_expat
    - B408  # import_xml_minidom
    - B409  # import_xml_pulldom
    - B410  # import_lxml
    - B411  # import_xmlrpclib
    - B412  # import_httpoxy
    - B413  # import_pycrypto
    - B501  # request_with_no_cert_validation
    - B502  # ssl_with_bad_version
    - B503  # ssl_with_bad_defaults
    - B504  # ssl_with_no_version
    - B505  # weak_cryptographic_key
    - B506  # yaml_load
    - B507  # ssh_no_host_key_verification
    - B601  # paramiko_calls
    - B602  # subprocess_popen_with_shell_equals_true
    - B603  # subprocess_without_shell_equals_true
    - B604  # any_other_function_with_shell_equals_true
    - B605  # start_process_with_a_shell
    - B606  # start_process_with_no_shell
    - B607  # start_process_with_partial_path
    - B608  # hardcoded_sql_expressions
    - B609  # linux_commands_wildcard_injection
    - B610  # django_extra_used
    - B611  # django_rawsql_used
    - B701  # jinja2_autoescape_false
    - B702  # use_of_mako_templates
    - B703  # django_mark_safe

  # Exclude tests not relevant for this project
  exclude:
    - B101  # Allow assert statements in tests
    - B601  # Paramiko not used
    - B701  # Jinja2 not used
    - B702  # Mako not used
    - B703  # Django not used
    - B610  # Django not used  
    - B611  # Django not used

# Skips - specific files or directories to exclude
skips:
  - "*/tests/*"  # Skip test files for some checks
  - "*_test.py"
  - "test_*.py"
  - "conftest.py"
  - "setup.py"

# Confidence levels
confidence:
  # HIGH: More likely to be security issues
  # MEDIUM: Possible security issues  
  # LOW: Potential security issues
  level: "MEDIUM"  # Report MEDIUM and HIGH confidence issues

# Severity levels
severity:
  # HIGH: Critical security vulnerabilities
  # MEDIUM: Important security issues
  # LOW: Minor security concerns
  level: "LOW"  # Report all severity levels

# Output formats and options
output:
  format: "json"
  output_file: ".security/bandit-report.json"
  verbose: true
  
# Baseline comparison
baseline:
  enabled: true
  baseline_file: ".security/bandit-baseline.json"

# Custom security rules for this project
custom_rules:
  # Data privacy rules for employee data
  - rule_id: "PRIV001"
    description: "Ensure employee data is properly anonymized"
    pattern: "employee.*(?:name|email|id)"
    severity: "HIGH"
    
  - rule_id: "PRIV002" 
    description: "Check for potential PII logging"
    pattern: "log.*(?:personal|private|sensitive)"
    severity: "MEDIUM"
    
  - rule_id: "CRYPTO001"
    description: "Ensure proper encryption for data at rest"
    pattern: "(?:save|store|write).*(?:csv|json|pickle)"
    severity: "HIGH"

# Project-specific security requirements
security_requirements:
  data_protection:
    - "All employee data must be encrypted at rest"
    - "No PII should be logged in plain text"
    - "Data retention policies must be enforced"
    - "Access controls must be implemented for sensitive data"
    
  communication:
    - "All external API calls must use HTTPS"
    - "Certificate validation must be enabled"
    - "Proper authentication mechanisms required"
    
  dependencies:
    - "All dependencies must be scanned for vulnerabilities"
    - "Known vulnerable dependencies must be updated"
    - "Dependency integrity must be verified"

# Integration settings
integration:
  ci_cd:
    fail_on_high: true      # Fail CI/CD on HIGH severity issues
    fail_on_medium: false   # Warning on MEDIUM severity issues
    fail_on_low: false      # Informational on LOW severity issues
    
  reporting:
    generate_report: true
    report_formats: ["json", "html", "txt"]
    include_source_code: false  # Don't include source in reports for privacy
    
  notifications:
    slack_webhook: null  # Configure if Slack notifications desired
    email_alerts: null   # Configure if email alerts desired
    
# Performance and optimization
performance:
  parallel_processing: true
  max_workers: 4
  timeout_seconds: 300
  
# Logging and debugging
logging:
  level: "INFO"
  log_file: ".security/bandit.log"
  include_timestamps: true