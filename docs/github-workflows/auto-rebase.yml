name: Auto-rebase PRs

on:
  pull_request_target:
    types: [opened, reopened, synchronize]

permissions:
  contents: write
  pull-requests: write

jobs:
  auto-rebase:
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]' && !contains(github.event.pull_request.labels.*.name, 'no-rebase')
    
    steps:
    - name: Checkout PR
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        ref: ${{ github.head_ref }}
        fetch-depth: 0

    - name: Configure Git
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        
        # Enable rerere for conflict resolution
        git config rerere.enabled true
        git config rerere.autoupdate true
        
        # Configure merge drivers
        git config merge.theirs.name "Prefer incoming changes"
        git config merge.theirs.driver "cp -f '%B' '%A'"
        git config merge.union.name "Line union merge"
        git config merge.union.driver "git merge-file --union -p %A %O %B > %A"

    - name: Fetch base branch
      run: git fetch origin ${{ github.base_ref }}

    - name: Attempt rebase
      id: rebase
      run: |
        set +e
        git rebase origin/${{ github.base_ref }}
        rebase_result=$?
        
        if [ $rebase_result -eq 0 ]; then
          echo "rebase_successful=true" >> $GITHUB_OUTPUT
          echo "Rebase completed successfully"
        else
          # Check if there are unresolved conflicts
          if git status --porcelain | grep -q "^UU\|^AA\|^DD"; then
            echo "rebase_successful=false" >> $GITHUB_OUTPUT
            echo "Manual intervention required for conflicts"
            git rebase --abort
          else
            # Try to continue rebase if conflicts were auto-resolved
            git rebase --continue
            continue_result=$?
            if [ $continue_result -eq 0 ]; then
              echo "rebase_successful=true" >> $GITHUB_OUTPUT
              echo "Rebase completed with auto-resolved conflicts"
            else
              echo "rebase_successful=false" >> $GITHUB_OUTPUT
              git rebase --abort
            fi
          fi
        fi

    - name: Push rebased branch
      if: steps.rebase.outputs.rebase_successful == 'true'
      run: |
        git push --force-with-lease origin ${{ github.head_ref }}

    - name: Comment on PR - Success
      if: steps.rebase.outputs.rebase_successful == 'true'
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '✅ Auto-rebase successful! This PR has been rebased onto the latest `${{ github.base_ref }}` branch.'
          })

    - name: Comment on PR - Conflict
      if: steps.rebase.outputs.rebase_successful == 'false'
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '⚠️ Auto-rebase failed due to conflicts that require manual resolution. Please rebase your branch manually:\n\n```bash\ngit fetch origin\ngit rebase origin/${{ github.base_ref }}\n# Resolve conflicts\ngit rebase --continue\ngit push --force-with-lease\n```'
          })